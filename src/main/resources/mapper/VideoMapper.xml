<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.zhangw.onlineeducation.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="vip.zhangw.onlineeducation.domain.Video">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="cover_img" jdbcType="VARCHAR" property="coverImg" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="point" jdbcType="DOUBLE" property="point" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, summary, cover_img, price, create_time, point
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="vip.zhangw.onlineeducation.domain.Video">
    insert into video (id, title, summary, 
      cover_img, price, create_time, 
      point)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{coverImg,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{point,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="vip.zhangw.onlineeducation.domain.Video">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="coverImg != null">
        cover_img,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="point != null">
        point,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null">
        #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null">
        #{point,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vip.zhangw.onlineeducation.domain.Video">
    update video
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null">
        cover_img = #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.zhangw.onlineeducation.domain.Video">
    update video
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      cover_img = #{coverImg,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      point = #{point,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--List<Video> selectAll();-->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from video
  </select>

  <!--Video findDetailById(int videoId);-->
  <select id="findDetailById" resultMap="VedioDetailResultMap" parameterType="INTEGER">
    SELECT v.id,v.title,v.summary,v.cover_img,v.price,v.create_time,v.point,
    c.id AS chapter_id,c.video_id,c.title AS chapter_title,c.ordered,c.create_time,
    e.id AS episode_id,e.title AS episode_,e.num,e.ordered,e.play_url,e.chapter_id,e.free,e.free,e.create_time AS episode_create_time
    FROM video v LEFT JOIN chapter c ON v.id=c.video_id
    LEFT JOIN episode e ON c.id=e.chapter_id
    WHERE v.id=#{id,jdbcType=INTEGER}
    ORDER BY c.ordered,e.num ASC
  </select>
  <resultMap id="VedioDetailResultMap" type="Video">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="cover_img" jdbcType="VARCHAR" property="coverImg" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="point" jdbcType="DOUBLE" property="point" />
    <collection property="chapterList" ofType="Chapter">
      <id column="chapter_id" jdbcType="INTEGER" property="id" />
      <result column="video_id" jdbcType="INTEGER" property="videoId" />
      <result column="chapter_title" jdbcType="VARCHAR" property="title" />
      <result column="ordered" jdbcType="INTEGER" property="ordered" />
      <result column="chapter_create_time" jdbcType="TIMESTAMP" property="create_time" />
      <collection property="episodeList" ofType="Episode">
        <id column="episode_id" jdbcType="INTEGER" property="id" />
        <result column="episode_title" jdbcType="VARCHAR" property="title" />
        <result column="num" jdbcType="INTEGER" property="num" />
        <result column="ordered" jdbcType="INTEGER" property="ordered" />
        <result column="play_url" jdbcType="VARCHAR" property="playUrl" />
        <result column="chapter_id" jdbcType="INTEGER" property="chapterId" />
        <result column="free" jdbcType="INTEGER" property="free" />
        <result column="video_id" jdbcType="INTEGER" property="videoId" />
        <result column="episode_create_time" jdbcType="TIMESTAMP" property="createTime" />
      </collection>
    </collection>
  </resultMap>

</mapper>